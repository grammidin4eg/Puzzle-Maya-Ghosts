package com.karachevtsevuu.mayaghosts;

import java.util.Vector;

public class MatrixMover {
	private Vector<GBlock> mBlocks;
	private int directionX = 0;
	private int directionY = 0;
	private GSprite movedObj = null;
	
	private static MatrixMover self = null;
	
	public static MatrixMover getSelf() {
		if( self == null ) {
			self = new MatrixMover();
		}
		return self;
	}

	public MatrixMover() {
		self = this;
	}
	public Vector<GBlock> getBlocks() {
		return mBlocks;
	}

	public void setBlocks(Vector<GBlock> mBlocks) {
		this.mBlocks = mBlocks;
	}
	
	public void moveX(int direction, GSprite moved_object) {
		directionX = direction;
		movedObj = moved_object;
		doStep();
	}
	
	public void moveY(int direction, GSprite moved_object) {
		directionY = direction;
		movedObj = moved_object;
		doStep();
	}
	
	private void doStep() {
		if( checkWay() ) {
			moveObject();
		}
	}
	
	private boolean checkWay() {
		//no solid / solid
		final int next_x = movedObj.getRowX()+directionX;
		final int next_y = movedObj.getRowY()+directionY;
		boolean result = true;
		for( GBlock cur_block : mBlocks ) {
			if( (cur_block.getRow()==next_x) && (cur_block.getCol()==next_y) ) {
				result = !cur_block.runAction();
			}
			if( (cur_block.getRow()==movedObj.getRowX()) && (cur_block.getCol()==movedObj.getRowY()) ) {
				cur_block.runAction();
			}
		}
		return result;
	}
	
	private void moveObject() {
		
	}
}
